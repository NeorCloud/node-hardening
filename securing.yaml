
# create ansible-key
- name: Generate ed25519 SSH key pair if directory and file do not exist
  hosts: localhost
  tasks:
    - name: Extract SSH key directory
      set_fact:
        ssh_key_dir: "{{ ssh_key_path | dirname }}"

    - name: Check if SSH key directory exists
      stat:
        path: "{{ ssh_key_dir }}"
      register: ssh_key_dir

    - name: Create SSH key directory
      file:
        path: "{{ ssh_key_dir }}"
        state: directory
        mode: '0700'
      when: not ssh_key_dir.stat.exists

    - name: Check if SSH key file exists
      stat:
        path: "{{ ssh_key_path }}"
      register: ssh_key_file

    - name: Generate SSH key pair
      command: ssh-keygen -t ed25519 -f "{{ ssh_key_path }}" -q -N ''
      when: not ssh_key_file.stat.exists

# Security hardening for Ubuntu 22.04 LTS playbook
- name: Add the ansible user
  hosts: all
  become: yes
  # Set sudo password from ansible-vault
  vars_prompt:
    - name: "ansible_become_pass"
      prompt: "Enter sudo password"
      private: yes
  tasks:
  - name: Add the user 'ansible' with a bash shell
    ansible.builtin.user:
      name: ansible
      shell: /bin/bash
      create_home: yes
      state: present
      groups: sudo
      append: yes

  - name: Add ansible public key
    authorized_key:
      user: ansible
      key: "{{ lookup('file', '{{ ssh_key_path }}.pub') }}"

  - name: "Allow ansible user to sudo without a password"
    lineinfile:
      dest: "/etc/sudoers"
      state: "present"
      insertafter: "^#includedir /etc/sudoers.d"
      line: "ansible  ALL=(ALL) NOPASSWD: ALL" 
  - name: Upgrade depenencies
    hosts: all
    become: yes
    vars:
      ansible_user: ansible
      ansible_ssh_private_key_file: "{{ ssh_key_path }}"
  tasks:
  - name: Update apt cache
    ansible.builtin.apt:
      update_cache: yes
      cache_valid_time: 3600
      
  - name: Upgrade all packages
    ansible.builtin.apt:
      upgrade: yes
      autoremove: yes
      autoclean: yes
- name: Secure SSH access
  hosts: all
  become: yes
  vars:
    ansible_user: ansible
    ansible_ssh_private_key_file: "{{ ssh_key_path }}"
  tasks:
  - name: Allow public key authentication
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^#PubkeyAuthentication yes"
      line: "PubkeyAuthentication yes"
      state: present

  - name: Disallow password authentication
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication no"
      state: present

  - name: Allow ansible access only
    lineinfile:
      dest: /etc/ssh/sshd_config
      line: "AllowUsers ansible"
      state: present

  - name: Disallow root SSH access
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^PermitRootLogin"
      line: "PermitRootLogin no"
      state: present

  - name: Disable SSH Protocol 1
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^#Protocol"
      line: "Protocol 2"
      state: present

  - name: Disable Port Forwarding
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^#AllowTcpForwarding"
      line: "AllowTcpForwarding no"
      state: present

  - name: Limit the Maximum Number of Concurrent Sessions
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^#MaxSessions"
      line: "MaxSessions 4"
      state: present

  - name: Change Log Level of SSH in Linux
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^#LogLevel INFO"
      line: "LogLevel VERBOSE"
      state: present

  - name: Change the Default Port
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^#Port 22"
      line: "Port {{ ssh_port_desired }}"
      state: present

  - name: Limit idle time to 60 mins
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^#ClientAliveInterval 0"
      line: "ClientAliveInterval 3600"
      state: present

  - name: Do not permit empty passwords
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^#PermitEmptyPasswords no"
      line: "PermitEmptyPasswords no"
      state: present

  - name: Disable X11 forwarding
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "^X11Forwarding yes"
      line: "X11Forwarding yes"
      state: present

  - name: Limit max authentication attempts to 3
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: "#MaxAuthTries 6"
      line: "MaxAuthTries 3"
      state: present
    notify: 
    - Restart ssh

  handlers:
  - name: Restart ssh
    ansible.builtin.service:
      name: sshd
      state: restarted
